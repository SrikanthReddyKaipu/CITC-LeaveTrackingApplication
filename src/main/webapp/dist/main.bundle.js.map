{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/Admin/app.admin.component.ts","webpack:///./src/app/Admin/app.edituser.component.ts","webpack:///./src/app/Admin/app.signup.component.ts","webpack:///./src/app/Home/app.leave.component.ts","webpack:///./src/app/Home/app.setpassword.ts","webpack:///./src/app/Login/app.login.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.model.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/Admin/app.admin.component.html","webpack:///./src/app/Admin/app.edituser.component.html","webpack:///./src/app/Admin/app.signup.component.html","webpack:///./src/app/Home/app.leave.component.html","webpack:///./src/app/Home/app.setpassword.html","webpack:///./src/app/Login/app.login.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/Home/app.password-input.ts","webpack:///./src/app/app.holidayservice.ts","webpack:///./src/app/app.routing.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 100;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 100\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(err => console.error(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { EmployeedataService } from '../app.service';\nimport { EmpDataService } from '../app.model';\nimport { ToasterContainerComponent, ToasterService, Toast, ToasterConfig } from 'angular2-toaster';\n\n\n\n\n@Component({\n    templateUrl: './app.admin.component.html',\n    providers: [EmployeedataService]\n})\n\nexport class AdminComponent {\n    public employee: any;\n    public editedIndex: boolean;\n    public EmployeeId: any = {};\n    public leaveHistory: any;\n    cancelRequest: boolean = false;\n    userFilter: any = { employeeName: '' };\n\n\n    constructor(public _service: EmployeedataService,\n        public empDataSr: EmpDataService,\n        public toasterService: ToasterService) {\n\n    }\n    ngOnInit() {\n        this.EmployeeId = this.empDataSr.getEmpInfo();\n        this.getLeaveRequests();\n        this.getLeaveRequestHistory();\n       \n    }\n    approveRejectAction(index: any, status) {\n        this.empDataSr.loading = true;\n        this._service.ApproveRejectLeave(status, this.employee[index].reqId)\n            .subscribe((res) => {\n                if (res.header && res.header == 'Ok') {\n                    this.getLeaveRequests();\n                    this.getLeaveRequestHistory();\n                    this.empDataSr.loading = false;\n                    this.popToastSuccess();\n                } else {\n                    this.empDataSr.loading = false;\n                    this.popToastFailed();\n                }\n            });\n    }\n    cancelLeaveAction(index: any, status) {\n        if (window.confirm(\"Are you sure want to Cancel\") && this.leaveHistory[index].status === \"Approved\") {\n            this.empDataSr.loading = true;\n            this._service.ApproveRejectLeave(status, this.leaveHistory[index].reqId)\n                .subscribe((res) => {\n                    if (res.header && res.header == 'Ok') {\n                        this.getLeaveRequests();\n                        this.getLeaveRequestHistory();\n                        this.empDataSr.loading = false;\n                        this.popToastSuccess();\n                    } else {\n                        this.empDataSr.loading = false;\n                        this.popToastFailed();\n                    }\n                });\n\n        } else {\n            this.popToastFailed();\n        }\n\n\n    }\n    get isManager() {\n        return this.empDataSr.isManager;\n    }\n\n    getLeaveRequests() {\n        this._service.getLeaves(this.EmployeeId.empCode, \"A\")\n            .subscribe(data => this.employee = data);\n    }\n\n    getLeaveRequestHistory() {\n        this._service.getLeavesApproveReject(this.EmployeeId.empCode, \"A\")\n            .subscribe(data => {\n            this.leaveHistory = data;\n                var today = new Date().getTime();\n               for (var i = 0; i < this.leaveHistory.length; i++) {\n                    if (this.leaveHistory[i].status === 'Rejected' || this.leaveHistory[i].status ==='Cancelled' || today > new Date(this.leaveHistory[i].toDate).getTime()) {\n                        this.leaveHistory[i].cancelRequest = true;\n                    } else {\n                        this.leaveHistory[i].cancelRequest = false;\n                    }\n                }\n            });\n    }\n    popToastSuccess() {\n        var toast: Toast = {\n            type: 'success',\n            title: 'Your request has been done successfully',\n            body: 'Thank you'\n        };\n\n        this.toasterService.pop(toast);\n    }\n    popToastFailed() {\n        var toast: Toast = {\n            type: 'error',\n            title: 'Error in while submitting your request',\n            body: 'Thank you'\n        };\n\n        this.toasterService.pop(toast);\n    }\n   \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Admin/app.admin.component.ts","import { Component } from '@angular/core';\nimport { EmployeedataService } from '../app.service';\nimport { Router } from '@angular/router';\nimport { EmpDataService } from '../app.model';\nimport { holidayService } from '../app.holidayservice';\nimport { ToasterContainerComponent, ToasterService, Toast, ToasterConfig } from 'angular2-toaster';\n\n\n\n@Component({\n  templateUrl: './app.edituser.component.html',\n  providers: [EmployeedataService, holidayService],\n\n})\n\nexport class EdituserComponent {\n\n  public employee: any[];\n  public editedIndex: boolean;\n  public Save: boolean = false;\n  public Edit: boolean = true;\n  public onsiteManagersList: any;\n  public holidaysList: any;\n  public managersList:any;\n  public onsManagerEdit: boolean = true;\n  public onsManagerSave: boolean = false;\n  public onsEditedIndex: boolean;\n  managerEditedIndex: boolean;\n  managerEdit: boolean = true;\n  managerSave: boolean = false;\n  hDateEditedIndex: boolean;\n  hDateEdit: boolean = true;\n  hDateSave: boolean = false;\n  userFilter: any = { empCode: '' };\n\n  constructor(public _service: EmployeedataService,\n    public _holidayService: holidayService,\n    public route: Router,\n    public empDataSr: EmpDataService,\n    public toasterService: ToasterService) { }\n  ngOnInit() {\n    this.getEmployeeData();\n    this.getOnsiteManagersList();\n    this.getHolidaysList();\n    this.getManagersList();\n\n  }\n  getEmployeeData() {\n    this._service.getEmployeeData()\n      .subscribe(resEmployeeData => this.employee = resEmployeeData);\n\n  }\n  getOnsiteManagersList() {\n    this._service.getOnsiteManagers()\n      .subscribe(data => this.onsiteManagersList = data);\n  }\n  getHolidaysList() {\n    this._holidayService.getHolidays()\n      .subscribe(data => this.holidaysList = data);\n  }\n  getManagersList(){\n     this._service.getManagers()\n      .subscribe(data => this.managersList = data);\n  }\n\n  edit(document: any, i: any) {\n    this.editedIndex = i;\n    this.Save = true;\n    this.Edit = false;\n  }\n  save(i: any) {\n    this.editedIndex = false;\n    this.Save = false;\n    this.Edit = true;\n    this.empDataSr.loading = true;\n    var savedata = this.employee[i];\n    this._service.savedata(savedata)\n      .subscribe((res) => {\n        if (res.header && res.header == 'Ok') {\n          this.getEmployeeData();\n          this.empDataSr.loading = false;\n          this.popToastSuccess();\n        } else if (res.header && res.header !== 'Ok') {\n          this.empDataSr.loading = false;\n          this.popToastFailed();\n\n        }\n\n      });\n\n  }\n  delete(i: number) {\n    if (window.confirm(\"Are you sure want to delete\")) {\n      this.empDataSr.loading = true;\n      var deletedata = this.employee[i];\n      this._service.deletedata(deletedata)\n        .subscribe((res) => {\n          if (res.header && res.header == 'Ok') {\n            this.getEmployeeData();\n            this.empDataSr.loading = false;\n            this.popToastSuccess();\n          } else if (res.header && res.header !== 'Ok') {\n            this.empDataSr.loading = false;\n            this.popToastFailed();\n\n          }\n        });\n\n    }\n\n  }\n\n  popToastSuccess() {\n    var toast: Toast = {\n      type: 'success',\n      title: 'Your request has been submitted successfully',\n      body: 'Thank you'\n    };\n\n    this.toasterService.pop(toast);\n  }\n  popToastFailed() {\n    var toast: Toast = {\n      type: 'error',\n      title: 'Error in while submitting your request',\n      body: 'Thank you'\n    };\n\n    this.toasterService.pop(toast);\n  }\n  onsiteManagerEdit(document: any, i: any) {\n    this.onsEditedIndex = i;\n    this.onsManagerEdit = false;\n    this.onsManagerSave = true;\n  }\n  onsiteManagerSave(i: any) {\n    this.onsEditedIndex = false;\n    this.onsManagerEdit = true;\n    this.onsManagerSave = false;\n    this.empDataSr.loading = true;\n    var savedata = this.onsiteManagersList[i];\n    this._service.saveOnsiteManagerDetails(savedata)\n      .subscribe((res) => {\n        if (res.header && res.header == 'Ok') {\n          this.getOnsiteManagersList();\n          this.empDataSr.loading = false;\n          this.popToastSuccess();\n        } else if (res.header && res.header !== 'Ok') {\n          this.empDataSr.loading = false;\n          this.popToastFailed();\n\n        }\n\n      });\n  }\n  onsiteManagerDelete(i: any) {\n    if (window.confirm(\"Are you sure want to delete\")) {\n      this.empDataSr.loading = true;\n      var deletedata = this.onsiteManagersList[i];\n      this._service.deleteOnsiteManagerDetails(deletedata)\n        .subscribe((res) => {\n          if (res.header && res.header == 'Ok') {\n            this.getOnsiteManagersList();\n            this.empDataSr.loading = false;\n            this.popToastSuccess();\n          } else if (res.header && res.header !== 'Ok') {\n            this.empDataSr.loading = false;\n            this.popToastFailed();\n\n          }\n        });\n\n    }\n  }\n\n  addNewOnsiteManager(value: any, opt: any) {\n    this._service.addOnsiteManager(value)\n      .subscribe((res) => {\n        if (res.header && res.header == 'Ok') {\n          opt.resetForm();\n          this.popToastSuccess();\n         this.getOnsiteManagersList();\n        } else {\n          this.popToastFailed();\n        }\n\n      });\n  }\n  holidayDateEdit(document: any, i: any) {\n    this.hDateEditedIndex = i;\n    this.hDateEdit = false;\n    this.hDateSave = true;\n  }\n  holidayDateSave(i: any) {\n    this.hDateEditedIndex = false;\n    this.hDateEdit = true;\n    this.hDateSave = false;\n    this.empDataSr.loading = true;\n    var savedata = this.holidaysList[i];\n    this._holidayService.saveHolidayList(savedata)\n      .subscribe((res) => {\n        if (res.header && res.header == 'Ok') {\n          this.getHolidaysList();\n          this.empDataSr.loading = false;\n          this.popToastSuccess();\n        } else {\n          this.empDataSr.loading = false;\n          this.popToastFailed();\n\n        }\n\n      });\n  }\n\n  \n  managerListEdit(document: any, i: any){\n    this.managerEditedIndex = i;\n    this.managerEdit = false;\n    this.managerSave = true;\n\n  }\n  managerListSave(i:any){\n    this.managerEditedIndex = false;\n    this.managerEdit = true;\n    this.managerSave = false;\n    this.empDataSr.loading = true;\n    var savedata = this.managersList[i];\n    this._service.saveManagerDetails(savedata)\n      .subscribe((res) => {\n        if (res.header && res.header == 'Ok') {\n          this.getManagersList();\n          this.empDataSr.loading = false;\n          this.popToastSuccess();\n        } else {\n          this.empDataSr.loading = false;\n          this.popToastFailed();\n\n        }\n\n      });\n\n  }\n\n  managerDelete(i: any) {\n    if (window.confirm(\"Are you sure want to delete\")) {\n      this.empDataSr.loading = true;\n      var deletedata = this.managersList[i];\n      this._service.deleteManagerDetails(deletedata)\n        .subscribe((res) => {\n          if (res.header && res.header == 'Ok') {\n            this.getManagersList();\n            this.empDataSr.loading = false;\n            this.popToastSuccess();\n          } else{\n            this.empDataSr.loading = false;\n            this.popToastFailed();\n\n          }\n        });\n\n    }\n  }\n  addNewManager(value: any, opt: any) {\n    this._service.addManager(value)\n      .subscribe((res) => {\n        if (res.header && res.header == 'Ok') {\n          opt.resetForm();\n          this.popToastSuccess();\n          this.getManagersList();\n        } else {\n          this.popToastFailed();\n        }\n\n      });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Admin/app.edituser.component.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmployeedataService } from '../app.service';\nimport { NgForm } from '@angular/forms';\nimport { EmpDataService } from '../app.model';\nimport { ToasterContainerComponent, ToasterService, Toast, ToasterConfig } from 'angular2-toaster';\n\n\n\n@Component({\n    selector: 'signup',\n    templateUrl: './app.signup.component.html',\n    providers: [EmployeedataService],\n\n})\n\nexport class SignupComponent {\n    /* public manager_list: any[] = [\n         { name: 'Gokul Janarthanan', Id: '0012', department: \"QA\" },\n         { name: 'Rajdeep Biswas', Id: '0013', department: \"IT\" },\n         { name: 'Venkat', Id: '0014', department: \"Developement\" }\n     ];*/\n    public selectedPerson: any = {};\n    public showId: boolean = true;\n    public managerslist: any;\n    public onsitemanagerslist: any;\n    public userList: any;\n    public errEmailMsg: any;\n    public errEmpCodeMsg: any;\n    public obj = [];\n\n\n    constructor(public route: Router,\n        public _restfull: EmployeedataService,\n        public empDataSr: EmpDataService,\n        public toasterService: ToasterService) { }\n\n    ngOnInit() {\n\n        this.getmanagersList();\n        this.getonsiteManagersList();\n        this.getuserlist();\n\n    }\n    getmanagersList() {\n        this._restfull.getManagers()\n            .subscribe(data => this.managerslist = data);\n\n    }\n    getonsiteManagersList() {\n        this._restfull.getOnsiteManagers()\n            .subscribe(data => this.onsitemanagerslist = data);\n\n    }\n    getuserlist() {\n        this._restfull.getEmployeeData()\n            .subscribe(data => {\n                this.userList = data;\n\n            });\n    }\n\n    onSubmit(value: any, opt: any) {\n        this.empDataSr.loading = true;\n        for (var i = 0; i < this.userList.length; i++) {\n            if (this.userList[i].email === value.email) {\n                this.empDataSr.loading = false;\n               this.popToastEmail();\n               return;\n              }else if (this.userList[i].empCode === value.empCode) {\n               this.empDataSr.loading = false;\n               this.popToastEmpcode();\n                return;\n            } \n        }\n                 this._restfull.saveRetur(value)\n                    .subscribe((res) => {\n                        if (res.header && res.header == 'Ok') {\n                            opt.resetForm();\n                            this.empDataSr.loading = false;\n                            this.popToastSuccess();\n                            this.getuserlist();\n                        }else{\n                             this.empDataSr.loading = false;\n                             this.popToastFailed();\n                        } \n                    });\n            \n    }\n\n /*checkDuplicates(value:any){\n        for (var i = 0; i < this.userList.length; i++) {\n            if (this.userList[i].email === value.email) {\n               this.popToastEmail();\n              }else if (this.userList[i].empCode === value.empCode) {\n               this.popToastEmpcode();\n            } \n        }\n    }*/\n    popToastSuccess() {\n        var toast: Toast = {\n            type: 'success',\n            title: 'You submitted record successfully',\n            body: 'Thank you'\n        };\n\n        this.toasterService.pop(toast);\n    }\n    popToastFailed() {\n        var toast: Toast = {\n            type: 'error',\n            title: 'Error in while submitting your record',\n            body: 'Thank you'\n        };\n\n        this.toasterService.pop(toast);\n    }\n    popToastEmail() {\n        var toast: Toast = {\n            type: 'error',\n            title: 'Email Already used'\n        };\n\n        this.toasterService.pop(toast);\n    }\n    popToastEmpcode() {\n        var toast: Toast = {\n            type: 'error',\n            title: 'Emp code Already used'\n        };\n\n        this.toasterService.pop(toast);\n    }\n\n    onChanged($event: any) {\n        var match = this.onsitemanagerslist.filter(x => x.dept === $event);\n        this.obj = [];\n        match.forEach(element => {\n            this.obj.push(element.firstName);\n        });\n\n    }\n    /*get isMainAdmin() {\n        return this.empDataSr.isMainAdmin;\n    }*/\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Admin/app.signup.component.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmployeedataService } from '../app.service';\nimport { EmpDataService } from '../app.model';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { holidayService } from '../app.holidayservice';\nimport { ToasterContainerComponent, ToasterService, Toast, ToasterConfig } from 'angular2-toaster';\nimport { IMyDpOptions } from 'mydatepicker';\n\n\n\n\n@Component({\n    selector: 'leave',\n    templateUrl: './app.leave.component.html',\n    providers: [EmployeedataService, holidayService]\n\n})\n\nexport class LeaveComponent {\n    public leaveHistory: any;\n    public employees: any = {};\n    public data: Observable<any>;\n    newEntry: any = {};\n    public leave: any = {};\n    public leaves;\n    public holidays: any;\n    public empid: string;\n    public reqType: string = \"NA\";\n    public todate_errorMsg: any;\n    public leaves_errorMsg: any;\n    public valid: boolean = false;\n    public totleavesOfCL;\n    public totleavesOfSL;\n    public totleavesOfPL;\n\n    constructor(public routes: Router,\n        public _service: EmployeedataService,\n        public empDataSr: EmpDataService,\n        public _hservice: holidayService,\n        public toasterService: ToasterService) {\n\n\n    }\n\n    public myDatePickerOptions: IMyDpOptions = {\n        // other options...\n        dateFormat: 'mm/dd/yyyy',\n    };\n\n    ngOnInit() {\n        this.employees = this.empDataSr.getEmpInfo();\n        this.getholidaysList();\n        this.getleavesHistory();\n        this.leave.leavetype = '';\n    }\n\n\n    OnSubmit(value: any, opt: any) {\n        value.fromDate = this.leave.fromdate.formatted;\n        value.toDate = this.leave.todate.formatted;\n        // value.fromDate = this.getformatdate(value.fromDate);\n        //value.toDate = this.getformatdate(value.toDate);\n        this.empDataSr.loading = true;\n        this._service.LeaveRetur(value)\n            .subscribe((res) => {\n                if (res.header && res.header == 'Ok') {\n                    this.getleavesHistory();\n                    opt.resetForm();\n                    this.empDataSr.loading = false;\n                    this.popToastSuccess();\n                } else {\n                    this.empDataSr.loading = false;\n                    this.popToastFailed();\n                }\n            });\n\n\n    }\n    popToastSuccess() {\n        var toast: Toast = {\n            type: 'success',\n            title: 'You are applied for leave successfully',\n            body: 'Thank you'\n        };\n\n        this.toasterService.pop(toast);\n    }\n    popToastFailed() {\n        var toast: Toast = {\n            type: 'error',\n            title: 'Error in while appling leave',\n            body: 'Thank you'\n        };\n\n        this.toasterService.pop(toast);\n    }\n\n\n\n\n    getleavesHistory() {\n        this._service.getLeaves(this.employees.empCode, this.reqType)\n            .subscribe(data => {\n                this.leaveHistory = data;\n                this.totleavesOfCL = 0;\n                this.totleavesOfSL = 0;\n                this.totleavesOfPL = 0;\n\n                for (var i = 0; i < this.leaveHistory.length; i++) {\n                    if (this.leaveHistory[i].status === \"Pending\" && this.leaveHistory[i].leaveType === \"CL\") {\n                        this.totleavesOfCL = this.totleavesOfCL + this.leaveHistory[i].leavesApplied;\n                    }\n                    else if (this.leaveHistory[i].status === \"Pending\" && this.leaveHistory[i].leaveType === \"SL\") {\n                        this.totleavesOfSL = this.totleavesOfSL + this.leaveHistory[i].leavesApplied;\n                    }\n                    else if (this.leaveHistory[i].status === \"Pending\" && this.leaveHistory[i].leaveType === \"PL\") {\n                        this.totleavesOfPL = this.totleavesOfPL + this.leaveHistory[i].leavesApplied;\n                    }\n\n\n                }\n                this.totleavesOfCL = this.empDataSr.getEmpInfo().numOfCL - this.totleavesOfCL;\n                this.totleavesOfSL = this.empDataSr.getEmpInfo().numOfSL - this.totleavesOfSL;\n                this.totleavesOfPL = this.empDataSr.getEmpInfo().numOfPL - this.totleavesOfPL;\n\n            });\n\n\n\n    }\n    getholidaysList() {\n        this._hservice.getHolidays()\n            .subscribe(data => this.holidays = data);\n\n    }\n    get isAdmin() {\n        return this.empDataSr.isAdmin;\n    }\n     get isManager() {\n        return this.empDataSr.isManager;\n    }\n    /*get isMainAdmin() {\n        return this.empDataSr.isMainAdmin;\n    }*/\n    onChange(value, dtType) {\n        var _fromdate = this.leave.fromdate ? this.leave.fromdate.formatted : '';\n        var _todate = this.leave.todate ? this.leave.todate.formatted : '';\n        if (dtType === 'F') {\n            _fromdate = value.formatted;\n        } else if (dtType === 'T') {\n            _todate = value.formatted;\n        }\n        var leavetype = this.leave.leavetype;\n        var fromdate = new Date(_fromdate);\n        var todate = new Date(_todate);\n\n        let date1_unixtime = fromdate.getTime() / 1000;\n        let date2_unixtime = todate.getTime() / 1000;\n        var timeDifference = date2_unixtime - date1_unixtime;\n        var timeDifferenceInHours = timeDifference / 60 / 60;\n        var timeDifferenceInDays = timeDifferenceInHours / 24 + 1;\n\n\n\n\n        if (leavetype === \"CL\") {\n            this.leaves = timeDifferenceInDays;\n        } else if ((leavetype === \"SL\") || (leavetype === \"PL\")) {\n            var month = fromdate.getMonth() + 1;\n            var monthStr = month < 10 ? '0' + month : month;\n            var day = fromdate.getDate();\n            var dayStr = day < 10 ? '0' + day : day;\n            var year = fromdate.getFullYear();\n            var date1 = monthStr + \"/\" + dayStr + \"/\" + year;\n            var tomonth = todate.getMonth() + 1;\n            var tomonthStr = tomonth < 10 ? '0' + tomonth : tomonth;\n            var toDateDay = todate.getDate();\n            var todayStr = toDateDay < 10 ? '0' + toDateDay : toDateDay;\n            var toyear = todate.getFullYear();\n            var date2 = tomonthStr + \"/\" + todayStr + \"/\" + toyear;\n            var startDate = new Date(fromdate);\n            var endDate = new Date(todate);\n            var totalWeekdays = 0;\n            for (var i = startDate; i <= endDate;) {\n                if (i.getDay() == 0 || i.getDay() == 6) {\n                    totalWeekdays++;\n                }\n                i.setTime(i.getTime() + 1000 * 60 * 60 * 24);\n            }\n\n            var count = 0;\n\n            for (let i = 0; i < this.holidays.length; i++) {\n                var holiday = new Date(this.holidays[i].holidayDate);\n\n                if ((this.holidays[i].holidayDate <= date2 && this.holidays[i].holidayDate >= date1) && (holiday.getDay() !== 0 && holiday.getDay() !== 6)) {\n                    count++;\n\n                }\n\n            }\n            this.leaves = timeDifferenceInDays - totalWeekdays - count;\n        }\n        var today = new Date();\n        if (todate.getTime() < fromdate.getTime()) {\n            this.valid = true;\n            this.todate_errorMsg = \" * Todate can't be Lessthan Fromdate\";\n        } else {\n            this.todate_errorMsg = \"\";\n            this.valid = false;\n        }\n        if (leavetype === \"CL\" && this.totleavesOfCL < this.leaves) {\n            this.valid = true;\n            this.leaves_errorMsg = \" * No of leaves exceeded\";\n        } else if (leavetype === \"SL\" && this.totleavesOfSL < this.leaves) {\n            this.valid = true;\n            this.leaves_errorMsg = \" * No of leaves exceeded\";\n        } else if (leavetype === \"PL\" && this.totleavesOfPL < this.leaves) {\n            this.valid = true;\n            this.leaves_errorMsg = \" * No of leaves exceeded\";\n        } else {\n            this.leaves_errorMsg = \"\";\n            this.valid = false;\n        }\n\n\n    }\n\n    /*getformatdate(inputDate) {\n        let formattedDate = '';\n        var date = new Date(inputDate);\n        if (!isNaN(date.getTime())) {\n            var day = date.getDate().toString();\n            var month = (date.getMonth() + 1).toString();\n\n            formattedDate = (month[1] ? month : '0' + month[0]) + '/' +\n                (day[1] ? day : '0' + day[0]) + '/' +\n                date.getFullYear();\n\n        }\n\n        return formattedDate;\n    }*/\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Home/app.leave.component.ts","import { Component,NgModule } from '@angular/core';\r\nimport { EmployeedataService } from '../app.service';\r\nimport { EmpDataService } from '../app.model';\r\nimport { ToasterContainerComponent, ToasterService, Toast, ToasterConfig } from 'angular2-toaster';\r\nimport { PasswordInputComponent} from './app.password-input';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'set-password',\r\n    templateUrl: './app.setpassword.html',\r\n    providers: [EmployeedataService],\r\n\r\n})\r\n\r\n\r\nexport class SetPasswordComponent {\r\n\r\n    public oldpassword:any;\r\n    public password:any;\r\n    public repeatPassword:any;\r\n    show:boolean=false;\r\n    type:any;\r\n    input:any;\r\n\r\n\r\n\r\n    constructor(public _restfull: EmployeedataService,\r\n        public empDataSr: EmpDataService,\r\n        public toasterService: ToasterService) {\r\n\r\n    }\r\n\r\n    onSubmit(value: any, opt: any) {\r\n        this.empDataSr.loading = true;\r\n        this._restfull.resetPassword(value.oldpassword, value.password)\r\n            .subscribe((res) => {\r\n                if (res.header && res.header == 'Ok') {\r\n                    opt.resetForm();\r\n                    this.empDataSr.loading = false;\r\n                    this.popToastSuccess();\r\n                }else if(res.header && res.header !== 'Ok'){\r\n                    this.empDataSr.loading = false;\r\n                    this.popToastFailed();\r\n                }\r\n\r\n            });\r\n    }\r\n    popToastSuccess() {\r\n        var toast: Toast = {\r\n            type: 'success',\r\n            title: 'You changed your password successfully',\r\n            body: 'Thank you'\r\n        };\r\n\r\n        this.toasterService.pop(toast);\r\n    }\r\n    popToastFailed() {\r\n        var toast: Toast = {\r\n            type: 'error',\r\n            title: 'Error in while password changing',\r\n            body: 'Thank you'\r\n        };\r\n\r\n        this.toasterService.pop(toast);\r\n    }\r\n    toggleShow(){\r\n        this.show = !this.show;\r\n        if (this.show){\r\n            this.input.changeType(\"text\");\r\n        }\r\n        else {\r\n            this.input.changeType(\"password\");\r\n        }\r\n\r\n    }\r\n       changeType(type:string): void {\r\n        this.type = type;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Home/app.setpassword.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmployeedataService } from '../app.service';\nimport { EmpDataService } from '../app.model';\nimport { ToasterContainerComponent, ToasterService, Toast, ToasterConfig } from 'angular2-toaster';\n\n\n@Component({\n    selector: 'login',\n    templateUrl: './app.login.component.html',\n    providers: [EmployeedataService]\n\n\n})\n\nexport class LoginComponent implements OnInit {\n    public employees: any = {};\n    public errorMsg: any = [];\n\n    constructor(public router: Router,\n        public _service: EmployeedataService,\n        public empDataSr: EmpDataService,\n        public toasterService: ToasterService) { }\n\n    ngOnInit() {\n\n    }\n\n\n\n    loginSubmit(value: any) {\n        let screen = '';\n        this._service.getEmployees(value)\n            .subscribe(resEmployeeData => {\n                // for (let item of resEmployeeData) {\n                //     if (item.username === value.username && item.password === value.password) {\n                //this.employees = item;\n                localStorage.setItem(\"app_data\", JSON.stringify(value));\n                this.empDataSr.setEmpInfo(resEmployeeData.body);\n                if (resEmployeeData.body.email) {\n                    this.empDataSr.loggedIn = true;\n                    switch (resEmployeeData.body.userRole) {\n                        case 0: {\n                            screen = 'leave'\n                            this.empDataSr.isAdmin = false;\n                            this.router.navigate([screen]);\n                            break;\n                        }\n                        case 1:\n                            {\n                                screen = 'admin'\n                                this.empDataSr.isAdmin = true;\n                                this.empDataSr.isManager = false;\n                              //  this.empDataSr.isMainAdmin=true;\n                                this.router.navigate([screen]);\n                                break;\n                            }\n                        case 2: {\n                            screen = 'admin'\n                            this.empDataSr.isAdmin = true;\n                            this.empDataSr.isManager = true;\n                            //this.empDataSr.isMainAdmin=false;\n                            this.router.navigate([screen]);\n                            break;\n                        }\n\n                    }\n\n                } else {\n                    this.errorMsg = 'Username or password is incorrect';\n\n                }\n\n\n                // }\n                // if (item.username != value.username && item.password != value.password) {\n\n                //     this.errorMsg = 'Username or password is incorrect';\n                // }\n                // else {\n                //     this.router.navigate([screen]);\n                // }\n                // }\n\n\n            });\n        // for (let i = 0; i < this.employees.length; i++) {\n        //     if (this.employees[i].username === value.username && this.employees[i].password === value.password && this.employees[i].usertype === \"user\") {\n        //         this.router.navigate(['leave']);\n        //     }\n        //     else if (this.employees[i].username === value.username && this.employees[i].password === value.password && this.employees[i].usertype === \"admin\") {\n        //         this.router.navigate(['admin']);\n        //     } else {\n        //         this.errorMsg = 'Username or password is incorrect';\n        //     }\n        // }\n\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Login/app.login.component.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmpDataService } from './app.model';\nimport { EmployeedataService } from './app.service';\nimport {ToasterContainerComponent, ToasterService,Toast,ToasterConfig} from 'angular2-toaster';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n  loggedIn: any;\n  \n   public config1 : ToasterConfig = new ToasterConfig({\n    positionClass: 'toast-top-center',\n    limit: 1\n  });\n \n  constructor(public router: Router, public empDataSr: EmpDataService, public _service: EmployeedataService, public toasterService: ToasterService) {\n\n\n}\n\n  popToast() {\n    var toast: Toast = {\n      type: 'info',\n      title: 'Here is a Toast Title',\n      body: 'Here is a Toast Body'\n    };\n    \n    this.toasterService.pop(toast);\n  }\n\n\n  ngOnInit() {\n    this.onRefresh();\n  \n  }\n  get isLoggedIn() {\n    return this.empDataSr.isLoggedIn();\n\n  }\n\n  get name(){\n    if(this.empDataSr.empInfo.middleName===null){\n         return this.empDataSr.empInfo.firstName+\" \"+ this.empDataSr.empInfo.lastName;\n    }else{\n      return this.empDataSr.empInfo.firstName+\" \"+ this.empDataSr.empInfo.middleName+\" \"+this.empDataSr.empInfo.lastName;\n    }\n   \n  }\n  Home() {\n    var screen = '';\n    switch (this.empDataSr.empInfo.userRole) {\n\n      case 0: {\n        screen = 'leave'\n        this.empDataSr.isAdmin = false;\n        this.router.navigate([screen]);\n        break;\n      }\n      case 1: {\n        screen = 'admin'\n        this.empDataSr.isAdmin = true;\n        this.router.navigate([screen]);\n        break;\n      }\n       case 2: {\n        screen = 'admin'\n        this.empDataSr.isAdmin = true;\n        this.router.navigate([screen]);\n        break;\n      }\n    }\n\n  }\n\n  get reload():boolean{\n    return this.empDataSr.loading; \n  }\n\n  logout() {\n    this.empDataSr.logout();\n    this.router.navigate(['']);\n    localStorage.setItem('app_data', '');\n  }\n  setpassword() {\n    this.router.navigate(['setpassword']);\n  }\n\n  onRefresh() {\n\n    console.log(\"Just testing !!!!!!!!!!\");\n    let dt = localStorage.getItem(\"app_data\");\n    if (dt) {\n      let value = JSON.parse(dt);\n      this._service.getEmployees(value)\n        .subscribe(resEmployeeData => {\n          for (let item of resEmployeeData) {\n            if (item.username === value.username && item.password === value.password) {\n              //this.employees = item;\n              this.empDataSr.setEmpInfo(item);\n              this.empDataSr.loggedIn = true;\n              switch (item.usertype) {\n                case 'U': {\n                  //screen = 'leave'\n                  this.empDataSr.isAdmin = false;\n                  break;\n                }\n                case 'A': {\n                  //screen = 'admin'\n                  this.empDataSr.isAdmin = true;\n                  break;\n                }\n              }\n            };\n          }\n        });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { RoutingComponent } from './app.routing';\nimport { routingModuleComponent } from './app.routing';\nimport { EmpDataService } from './app.model';\nimport { EmployeedataService } from './app.service';\nimport { ToasterModule } from 'angular2-toaster';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Ng2FilterPipeModule } from 'ng2-filter-pipe';\nimport { MyDatePickerModule } from 'mydatepicker';\nimport { PasswordInputComponent} from './Home/app.password-input';\n\n\n\n\n@NgModule({\n  imports: [BrowserModule, RoutingComponent, FormsModule, HttpModule,BrowserAnimationsModule,ToasterModule,Ng2FilterPipeModule,\n  MyDatePickerModule],\n  declarations: [AppComponent, routingModuleComponent,PasswordInputComponent],\n  bootstrap: [AppComponent],\n  providers: [EmpDataService, EmployeedataService]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable } from \"@angular/core\";\n@Injectable()\nexport class EmpDataService {\n    empInfo: any;\n    public loggedIn: boolean;\n    public isManager: boolean;\n    public isAdmin: boolean;\n    public isMainAdmin:boolean;\n    public loading: boolean = false;\n\n    isLoggedIn() {\n        return this.loggedIn;\n    }\n\n    setEmpInfo(data: any) {\n        this.empInfo = data;\n    }\n\n    getEmpInfo() {\n        return this.empInfo;\n    }\n    logout() {\n        localStorage.removeItem('auth_token');\n        this.loggedIn = false;\n    }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.model.ts","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\n\nexport class EmployeedataService {\n  private _url: string = '/copartLTA/rest/api/v1/lta/login'; // <replace json file URL with rest api URL for auth>\n  private _baseUrl: string = '/copartLTA/rest/api/v1/lta';\n  private _addUrl: string = '/copartLTA/rest/api/v1/lta/addUser';\n  private _saveUrl: string = '/copartLTA/rest/api/v1/lta/editUser';\n  private _empdataUrl: string = '/copartLTA/rest/api/v1/lta/listUser';\n  private _ApplyLeaveUrl: string = '/copartLTA/rest/api/v1/lta/applyLeave';\n  private _ApproveRejectLeaveUrl: string = '/copartLTA/rest/api/v1/lta/aprroveReject';\n  private _DeleteuserUrl: string = '/copartLTA/rest/api/v1/lta/deleteUser';\n  private _ApproveRejectListUrl: string = '/copartLTA/rest/api/v1/lta/ApproveRejectList';\n  private _ManagersListUrl: string = '/copartLTA/rest/api/v1/lta/managers';\n  private _OnsiteManagersListUrl: string = '/copartLTA/rest/api/v1/lta/onsitemanagers';\n  private _ResetPasswordUrl: string = '/copartLTA/rest/api/v1/lta/resetPassword';\n  private _deleteOnsiteManagerUrl: string = '/copartLTA/rest/api/v1/lta/deleteOnsiteManager';\n  private _saveOnsiteManagerUrl: string = '/copartLTA/rest/api/v1/lta/editOnsiteManager';\n  private _addOnsiteManagerUrl: string = '/copartLTA/rest/api/v1/lta/addOnsiteManager';\n  private _deleteManagerUrl: string = '/copartLTA/rest/api/v1/lta/deleteManager';\n  private _saveManagerUrl: string = '/copartLTA/rest/api/v1/lta/editManager';\n  private _addManagerUrl: string = '/copartLTA/rest/api/v1/lta/addManager';\n  constructor(\n    private _router: Router, private _http: Http) { }\n\n\n  getEmployees(opt) {\n    //Change the following method to post for server authentication.\n    return this._http.post(this._url, opt)\n      //return this._http.get(this._url)\n      .map((response: Response) => response.json());\n\n  }\n  saveRetur(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._addUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n  LeaveRetur(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._ApplyLeaveUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n  savedata(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._saveUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n  deletedata(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._DeleteuserUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n\n  getLeaves(empid, reqType) {\n    return this._http.get(this._baseUrl + \"/listLeavesApplied?empId=\" + empid + \"&requestType=\" + reqType)\n      .map((response: Response) => response.json().body);\n  }\n  getEmployeeData() {\n    return this._http.get(this._empdataUrl)\n      .map((response: Response) => response.json().body);\n\n  }\n  ApproveRejectLeave(status, reqId) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this._http.post(this._ApproveRejectLeaveUrl + \"?reqId=\" + reqId + \"&status=\" + status, headers)\n      .map((res: Response) => res.json());\n  }\n  getLeavesApproveReject(empid, reqType) {\n    return this._http.get(this._ApproveRejectListUrl + \"?empId=\" + empid + \"&requestType=\" + reqType)\n      .map((response: Response) => response.json().body);\n  }\n  resetPassword(oldpassword, password) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this._http.post(this._ResetPasswordUrl + \"?oldpassword=\" + oldpassword + \"&password=\" + password, headers)\n      .map((res: Response) => res.json());\n  }\n\n  getManagers() {\n    return this._http.get(this._ManagersListUrl)\n      .map((response: Response) => response.json().body);\n\n  }\n  getOnsiteManagers() {\n    return this._http.get(this._OnsiteManagersListUrl)\n      .map((response: Response) => response.json().body);\n\n  }\n  saveOnsiteManagerDetails(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._saveOnsiteManagerUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n  deleteOnsiteManagerDetails(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._deleteOnsiteManagerUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n\n  addOnsiteManager(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._addOnsiteManagerUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n \nsaveManagerDetails(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._saveManagerUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n  deleteManagerDetails(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._deleteManagerUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n\n  addManager(data: any) {\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this._addManagerUrl, data, headers)\n      .map((res: Response) => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\r\\n  color: #369 !important;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 20px !important;\\r\\n}\\r\\nh2, h3 {\\r\\n  color: #369 !important;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-weight: lighter;\\r\\n  font-size: 20px !important;\\r\\n}\\r\\n\\r\\n.login{\\r\\n  position:fixed;\\r\\n    left:500px;\\r\\n    top:100px;\\r\\n\\r\\n}\\r\\n\\r\\n.my-container{\\r\\n    padding-right: 3em;\\r\\n    padding-left: 3em;\\r\\n}\\r\\n.mytable{\\r\\n \\r\\n  min-height: 180px !important;\\r\\n  height: 30px !important;\\r\\n  overflow: auto !important;\\r\\n  \\r\\n}\\r\\n\\r\\n.mytable_full{\\r\\n  min-height: 180px !important;\\r\\n  height: 90% !important;\\r\\n}\\r\\n.navbar-inverse {\\r\\n    background-color: #337ab7 !important;\\r\\n    border-color: #286090 !important;\\r\\n}\\r\\n.text{\\r\\n  color:white !important;\\r\\n}\\r\\n.navbar-inverse .navbar-nav>li>a {\\r\\n    color: #f5f5f5 !important;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  font-size: 13px !important;\\r\\n}\\r\\n.btn {\\r\\n    font-size: 13px !important;\\r\\n}\\r\\n.form-group {\\r\\n    margin-bottom: 5px !important;\\r\\n}\\r\\nbutton,input,submit,label{\\r\\n  font-family: \\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif !important;\\r\\n}\\r\\na{\\r\\n  cursor: pointer;\\r\\n}\\r\\ninput{\\r\\n  width:140px;\\r\\n}\\r\\n.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-control {\\r\\n    background-color: white !important;\\r\\n   \\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 171\n// module chunks = 1","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n    <li class=\\\"active\\\"><a routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Dashboard</a></li>\\n    <li *ngIf=\\\"isManager\\\"><a routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\">Add User</a></li>\\n    <li><a routerLink=\\\"/leave\\\" routerLinkActive=\\\"active\\\">Apply Leave</a></li>\\n    <li *ngIf=\\\"isManager\\\"><a routerLink=\\\"/edit\\\" routerLinkActive=\\\"active\\\">Edit User</a></li>\\n</ul>\\n<br>\\n<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">Leave Requests </div>\\n    <div class=\\\"panel-body table-responsive mytable\\\">\\n        <table class=\\\"table table-striped\\\">\\n            <thead>\\n                <tr>\\n                    <th>Sno</th>\\n                    <th>Employee Name</th>\\n                    <th>Resource Manager Name</th>\\n                    <th>CL's</th>\\n                    <th>SL's</th>\\n                    <th>PL's </th>\\n                    <th>Leaves applied</th>\\n                    <th>From Date</th>\\n                    <th>To date</th>\\n                    <th>Leave Type</th>\\n                    <th>Reason</th>\\n                    <th>Status</th>\\n                    <th>Action</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let employees of employee;let i = index;\\\">\\n                    <td>{{i+1}}</td>\\n                    <td>{{employees.employeeName}}</td>\\n                    <td>{{employees.resourceManager}}</td>\\n                    <td>{{employees.numOfCL}}</td>\\n                    <td>{{employees.numOfSL}}</td>\\n                    <td>{{employees.numOfPL}}</td>\\n                    <td>{{employees.leavesApplied}}</td>\\n                    <td>{{employees.fromDate}}</td>\\n                    <td>{{employees.toDate}}</td>\\n                    <td>{{employees.leaveType}}</td>\\n                    <td class=\\\"reason\\\">{{employees.reason}}</td>\\n                    <td>{{employees.status}}</td>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-mini btn-success\\\" (click)=\\\"approveRejectAction(i, 'Approved')\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-mini btn-danger\\\" (click)=\\\"approveRejectAction(i, 'Rejected')\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></button>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<br>\\n<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">Leave History</div>\\n    <div class=\\\"panel-body table-responsive mytable\\\">\\n        <table class=\\\"table table-striped\\\">\\n            <thead>\\n                <tr>\\n                    <th>Sno</th>\\n                    <th style=\\\"table-layout:fixed;width:13%;\\\"><input class=\\\"form-control\\\" type=\\\"search\\\" [(ngModel)]=\\\"userFilter.employeeName\\\" placeholder=\\\"Employee Name\\\"></th>\\n                    <th>Resource Manager Name</th>\\n                    <th>Leaves applied</th>\\n                    <th>From Date</th>\\n                    <th>To date</th>\\n                    <th>Leave Type</th>\\n                    <th>Reason</th>\\n                    <th>Status</th>\\n                    <th>Cancel</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let History of leaveHistory | filterBy: userFilter;let i = index;\\\">\\n                    <td>{{i+1}}</td>\\n                    <td>{{History.employeeName}}</td>\\n                    <td>{{History.resourceManager}}</td>\\n                    <td>{{History.leavesApplied}}</td>\\n                    <td>{{History.fromDate}}</td>\\n                    <td>{{History.toDate}}</td>\\n                    <td>{{History.leaveType}}</td>\\n                    <td class=\\\"reason\\\">{{History.reason}}</td>\\n                    <td>{{History.status}}</td>\\n                    <button [disabled]=\\\"History.cancelRequest\\\" type=\\\"button\\\" class=\\\"btn btn-mini btn-danger\\\" (click)=\\\"cancelLeaveAction(i, 'Cancelled')\\\">Cancel</button>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Admin/app.admin.component.html\n// module id = 193\n// module chunks = 1","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n    <li><a routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Dashboard</a></li>\\n    <li><a routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\">Add User</a></li>\\n    <li><a routerLink=\\\"/leave\\\" routerLinkActive=\\\"active\\\">Apply Leave</a></li>\\n    <li class=\\\"active\\\"><a routerLink=\\\"/edit\\\" routerLinkActive=\\\"active\\\">Edit User</a></li>\\n</ul>\\n<br>\\n<div>\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">Welcome to Employees List of Copart</div>\\n        <div class=\\\"panel-body table-responsive mytable\\\">\\n            <table class=\\\"table table-striped\\\" id=\\\"mytable\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Sno</th>\\n                        <th style=\\\"table-layout:fixed;width:13%;\\\"><input class=\\\"form-control\\\" type=\\\"search\\\" [(ngModel)]=\\\"userFilter.empCode\\\" placeholder=\\\"Employee Code\\\"></th>\\n                        <th>First Name</th>\\n                        <th>Middle Name</th>\\n                        <th>Last Name</th>\\n                        <th>Email</th>\\n                        <th>Resource Manager Id</th>\\n                        <th>Onsite Manager Name</th>\\n                        <th>Director</th>\\n                        <th>Phone</th>\\n                        <th>Department</th>\\n                        <th>User Role</th>\\n                        <th>Edit/Save/Delete</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let employees of employee | filterBy: userFilter;let i = index;\\\">\\n                        <td>{{i+1}}</td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.empCode}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.empCode\\\" value={{employees.empCode}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.firstName}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.firstName\\\" value={{employees.firstName}} *ngIf=\\\"editedIndex === i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.middleName}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.middleName\\\" value={{employees.middleName}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.lastName}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.lastName\\\" value={{employees.lastName}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.email}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.email\\\" value={{employees.email}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.resourceManager}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.resourceManager\\\" value={{employees.resourceManager}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.onsiteManager}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.onsiteManager\\\" value={{employees.onsiteManager}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.director}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.director\\\" value={{employees.director}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.phone}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.phone\\\" value={{employees.phone}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.dept}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.dept\\\" value={{employees.dept}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"editedIndex !== i\\\">{{employees.userRole}}</span>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"employees.userRole\\\" value={{employees.userRole}} *ngIf=\\\"editedIndex===i\\\"></td>\\n                        <button *ngIf=\\\"Edit\\\" (click)=\\\"edit(employees,i)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                        <button *ngIf=\\\"editedIndex === i && Save\\\" (click)=\\\"save(i)\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></button>\\n                        <button (click)=\\\"delete(i)\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">Welcome to OnsiteManagers List of Copart <span><a data-toggle=\\\"modal\\\" data-target=\\\"#addOnsiteManager\\\" style=\\\"color:white\\\"class=\\\"pull-right\\\">Add New User</a></span></div>\\n                <div class=\\\"panel-body table-responsive mytable\\\">\\n                    <table class=\\\"table table-striped\\\" id=\\\"mytable\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Sno</th>\\n                                <th>OnsiteManager Name</th>\\n                                <th>OnsiteManager Email</th>\\n                                <th>OnsiteManager Department</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let onsitelist of onsiteManagersList ;let i = index;\\\">\\n                                <td>{{i+1}}</td>\\n                                <td><span *ngIf=\\\"onsEditedIndex !== i\\\">{{onsitelist.firstName}}</span>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"onsitelist.firstName\\\" value={{onsitelist.firstName}} *ngIf=\\\"onsEditedIndex===i\\\"></td>\\n                                <td><span *ngIf=\\\"onsEditedIndex !== i\\\">{{onsitelist.empCode}}</span>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"onsitelist.empCode\\\" value={{onsitelist.empCode}} *ngIf=\\\"onsEditedIndex===i\\\"></td>\\n                                <td><span *ngIf=\\\"onsEditedIndex !== i\\\">{{onsitelist.dept}}</span>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"onsitelist.dept\\\" value={{onsitelist.dept}} *ngIf=\\\"onsEditedIndex===i\\\"></td>\\n                                <button *ngIf=\\\"onsManagerEdit\\\" (click)=\\\"onsiteManagerEdit(onsitelist,i)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                                <button *ngIf=\\\"onsEditedIndex === i && onsManagerSave\\\" (click)=\\\"onsiteManagerSave(i)\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></button>\\n                                <button (click)=\\\"onsiteManagerDelete(i)\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">Welcome to Holidays List of Copart</div>\\n                <div class=\\\"panel-body table-responsive mytable\\\">\\n                    <table class=\\\"table table-striped\\\" id=\\\"mytable\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Sno</th>\\n                                <th>Holiday Date</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let holidaylist of holidaysList ;let i = index;\\\">\\n                                <td>{{i+1}}</td>\\n                                <td><span *ngIf=\\\"hDateEditedIndex !== i\\\">{{holidaylist.holidayDate}}</span>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"holidaylist.holidayDate\\\" value={{holidaylist.holidayDate}} *ngIf=\\\"hDateEditedIndex===i\\\"></td>\\n                                <button *ngIf=\\\"hDateEdit\\\" (click)=\\\"holidayDateEdit(holidaylist,i)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                                <button *ngIf=\\\"hDateEditedIndex === i && hDateSave\\\" (click)=\\\"holidayDateSave(i)\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></button>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n     <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">Welcome to Managers List of Copart <span><a data-toggle=\\\"modal\\\" data-target=\\\"#addManager\\\" style=\\\"color:white\\\"class=\\\"pull-right\\\">Add New User</a></span></div>\\n                <div class=\\\"panel-body table-responsive mytable\\\">\\n                    <table class=\\\"table table-striped\\\" id=\\\"mytable\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Sno</th>\\n                                <th>Manager Emp Code</th>\\n                                <th>Manager Name</th>\\n                                <th>Manager Department</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let managerlist of managersList ;let i = index;\\\">\\n                                <td>{{i+1}}</td>\\n                                <td><span *ngIf=\\\"managerEditedIndex !== i\\\">{{managerlist.empCode}}</span>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"managerlist.empCode\\\" value={{managerlist.empCode}} *ngIf=\\\"managerEditedIndex===i\\\"></td>\\n                                <td><span *ngIf=\\\"managerEditedIndex !== i\\\">{{managerlist.firstName}}</span>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"managerlist.firstName\\\" value={{managerlist.firstName}} *ngIf=\\\"managerEditedIndex===i\\\"></td>\\n                                <td><span *ngIf=\\\"managerEditedIndex !== i\\\">{{managerlist.dept}}</span>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"managerlist.dept\\\" value={{managerlist.dept}} *ngIf=\\\"managerEditedIndex===i\\\"></td>\\n                                <button *ngIf=\\\"managerEdit\\\" (click)=\\\"managerListEdit(managerlist,i)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                                <button *ngIf=\\\"managerEditedIndex === i && managerSave\\\" (click)=\\\"managerListSave(i)\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></button>\\n                                <button (click)=\\\"managerDelete(i)\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    <div class=\\\"modal fade\\\" id=\\\"addOnsiteManager\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Add New Onsite Manager</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <form name=\\\"onsmanagerform\\\" #onsmanagerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onsmanagerForm.valid && addNewOnsiteManager(onsmanagerForm.value,onsmanagerForm)\\\"\\n                        novalidate>\\n                        <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': onsmanagerForm.submitted && !onsnameRef.valid }\\\">\\n                            <label>Name</label>\\n                            <input type=\\\"text\\\" #onsnameRef=\\\"ngModel\\\" required class=\\\"form-control\\\" name=\\\"onsiteManagerName\\\" ngModel>\\n                            <span *ngIf=\\\"!onsnameRef.valid  && onsmanagerForm.submitted\\\" class=\\\"help-block\\\">\\n                                    Name is required\\n                                   </span>\\n                        </div>\\n                        <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': onsmanagerForm.submitted && !onsemailRef.valid }\\\">\\n                            <label>Email</label>\\n                            <input type=\\\"text\\\" #onsemailRef=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" required class=\\\"form-control\\\"\\n                                name=\\\"onsiteManagerEmail\\\" ngModel>\\n                            <div *ngIf=\\\"onsemailRef.errors &&(onsemailRef.dirty)\\\" class=\\\"alert alert-danger\\\">\\n                                <div [hidden]=\\\"!onsemailRef.errors.required\\\">\\n                                    please enter your email address\\n                                </div>\\n                                <div [hidden]=\\\"!onsemailRef.errors.pattern\\\">\\n                                    please enter valid email with '@' and '.'\\n                                </div>\\n                            </div>\\n                            <span *ngIf=\\\" !onsemailRef.valid && onsmanagerForm.submitted\\\" class=\\\"help-block\\\">\\n                                    Email is required\\n                                   </span>\\n                        </div>\\n                        <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': onsmanagerForm.submitted && !onsdept.valid }\\\">\\n                            <label>Department</label>\\n                            <select name=\\\"onsiteManagerDept\\\" ngModel class=\\\"form-control\\\" required #onsdept=\\\"ngModel\\\">\\n                                        <option value=\\\"\\\" disabled>--select--</option>\\n                                            <option value=\\\"QA\\\">QA</option>\\n                                            <option value=\\\"Dev\\\">DEV</option>\\n                                            <option value=\\\"IT\\\">IT</option>\\n                                            <option value=\\\"HRA/Admin\\\">HRA/Admin</option>\\n                                            <option value=\\\"Director\\\">Director</option>\\n                                         </select>\\n                            <span *ngIf=\\\"!onsdept.valid && onsmanagerForm.submitted\\\" class=\\\"help-block\\\">\\n                                     Please select department\\n                                   </span>\\n                        </div>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal fade\\\" id=\\\"addManager\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Add New Manager</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <form name=\\\"managerform\\\" #managerForm=\\\"ngForm\\\" (ngSubmit)=\\\"managerForm.valid && addNewManager(managerForm.value,managerForm)\\\"\\n                        novalidate>\\n                        <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': managerForm.submitted && !mangagerEmpRef.valid }\\\">\\n                            <label>Emp Code</label>\\n                            <input type=\\\"text\\\" #mangagerEmpRef=\\\"ngModel\\\" required class=\\\"form-control\\\" name=\\\"resourceManagerEmpCode\\\" ngModel>\\n                            <span *ngIf=\\\"!mangagerEmpRef.valid  && managerForm.submitted\\\" class=\\\"help-block\\\">\\n                                    Emp code is required\\n                                   </span>\\n                        </div>\\n                        <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': managerForm.submitted && !managerNameRef.valid }\\\">\\n                            <label>Name</label>\\n                            <input type=\\\"text\\\" #managerNameRef=\\\"ngModel\\\" required class=\\\"form-control\\\" name=\\\"resourceManagerName\\\" ngModel>\\n                            <span *ngIf=\\\" !managerNameRef.valid && managerForm.submitted\\\" class=\\\"help-block\\\">\\n                                    Name is required\\n                                   </span>\\n                        </div>\\n                        <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': managerForm.submitted && !managerdept.valid }\\\">\\n                            <label>Department</label>\\n                            <select name=\\\"resourceManagerDept\\\" ngModel class=\\\"form-control\\\" required #managerdept=\\\"ngModel\\\">\\n                                        <option value=\\\"\\\" disabled>--select--</option>\\n                                            <option value=\\\"QA\\\">QA</option>\\n                                            <option value=\\\"Dev\\\">DEV</option>\\n                                            <option value=\\\"IT\\\">IT</option>\\n                                            <option value=\\\"HRA/Admin\\\">HRA/Admin</option>\\n                                            <option value=\\\"Director\\\">Director</option>\\n                                         </select>\\n                            <span *ngIf=\\\"!managerdept.valid && managerForm.submitted\\\" class=\\\"help-block\\\">\\n                                     Please select department\\n                                   </span>\\n                        </div>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Admin/app.edituser.component.html\n// module id = 194\n// module chunks = 1","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n    <li><a routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Dashboard</a></li>\\n    <li class=\\\"active\\\"><a routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\">Add User</a></li>\\n    <li><a routerLink=\\\"/leave\\\" routerLinkActive=\\\"active\\\">Apply Leave</a></li>\\n    <li><a routerLink=\\\"/edit\\\" routerLinkActive=\\\"active\\\">Edit User</a></li>\\n</ul>\\n<br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">Add New User Here </div>\\n                <div class=\\\"panel-body\\\">\\n                    <form name=\\\"myform\\\" #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"userForm.valid &&  onSubmit(userForm.value,userForm)\\\" novalidate>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !fnameRef.valid }\\\">\\n                                    <label>First Name</label>\\n                                    <input type=\\\"text\\\" #fnameRef=\\\"ngModel\\\" required class=\\\"form-control\\\" name=\\\"firstName\\\" ngModel>\\n                                    <span *ngIf=\\\"!fnameRef.valid  && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                    First Name is required\\n                                   </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label>Middle Name</label>\\n                                    <input type=\\\"text\\\" #middleRef=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"middleName\\\" ngModel>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !lnameRef.valid }\\\">\\n                                    <label>Last Name</label>\\n                                    <input type=\\\"text\\\" #lnameRef=\\\"ngModel\\\" required class=\\\"form-control\\\" name=\\\"lastName\\\" ngModel>\\n                                    <span *ngIf=\\\" !lnameRef.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                    Last Name is required\\n                                   </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !emailRef.valid }\\\">\\n                                    <label>Email</label>\\n                                    <input type=\\\"text\\\" #emailRef=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" required class=\\\"form-control\\\"\\n                                        name=\\\"email\\\" ngModel>\\n                                    <div *ngIf=\\\"emailRef.errors &&(emailRef.dirty)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div [hidden]=\\\"!emailRef.errors.required\\\">\\n                                            please enter your email address\\n                                        </div>\\n                                        <div [hidden]=\\\"!emailRef.errors.pattern\\\">\\n                                            please enter valid email with '@' and '.'\\n                                        </div>\\n                                    </div>\\n                                    <span *ngIf=\\\" !emailRef.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                    Email is required\\n                                   </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !empRef.valid }\\\">\\n                                    <label>Emp Code</label>\\n                                    <input type=\\\"text\\\" #empRef=\\\"ngModel\\\" pattern=\\\"^[0-9]{4}$\\\" required class=\\\"form-control\\\" name=\\\"empCode\\\" ngModel>\\n                                    <div *ngIf=\\\"empRef.errors &&(empRef.dirty)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div [hidden]=\\\"!empRef.errors.required\\\">\\n                                            please enter your emp code\\n                                        </div>\\n                                        <div [hidden]=\\\"!empRef.errors.pattern\\\">\\n                                            please enter empcode with starting number between 0 to 9 and max 4\\n                                        </div>\\n                                    </div>\\n                                    <span *ngIf=\\\"!empRef.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                    Emp Code is required\\n                                   </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !phoneRef.valid }\\\">\\n                                    <label>Phone</label>\\n                                    <input #phoneRef=\\\"ngModel\\\" type=\\\"text\\\" pattern=\\\"^[0-9]{10}$\\\" required class=\\\"form-control\\\" name=\\\"phone\\\" ngModel>\\n                                    <div *ngIf=\\\"phoneRef.errors &&(phoneRef.dirty)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div [hidden]=\\\"!phoneRef.errors.required\\\">\\n                                            please enter your phone number\\n                                        </div>\\n                                        <div [hidden]=\\\"!phoneRef.errors.pattern\\\">\\n                                            please enter 10 digit phone number\\n                                        </div>\\n                                    </div>\\n                                    <span *ngIf=\\\"!phoneRef.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                Phone number is required\\n                                   </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !dirRef.valid }\\\">\\n                                    <label>Director</label>\\n                                    <input type=\\\"text\\\" #dirRef=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"director\\\" required ngModel>\\n                                    <span *ngIf=\\\"!dirRef.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                Director name is required\\n                                   </span>\\n                                </div>\\n\\n                            </div>\\n                            <div class=col-sm-6>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !userRole.valid }\\\">\\n                                    <label>User Role</label>\\n                                    <select ngModel name=\\\"userRole\\\" class=\\\"form-control\\\" required #userRole=\\\"ngModel\\\">\\n                                        <option value=\\\"\\\" disabled>--select--</option>\\n                                <option value=\\\"2\\\">HRA</option>\\n                                <option value=\\\"1\\\">Manager</option>\\n                                <option value=\\\"0\\\">Employee</option>\\n                                   </select>\\n                                    <span *ngIf=\\\"!userRole.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                     Please select user role\\n                                   </span>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"showId\\\" class=\\\"col-sm-6\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !dept.valid }\\\">\\n                                    <label>Department</label>\\n                                    <!--<input class=\\\"form-control\\\" name=\\\"dept\\\" required ngModel [(ngModel)]=\\\"selectedPerson.dept\\\" readonly>-->\\n                                    <select name=\\\"dept\\\" ngModel class=\\\"form-control\\\" required #dept=\\\"ngModel\\\" (change)=\\\"onChanged($event.target.value)\\\">\\n                                        <option value=\\\"\\\" disabled>--select--</option>\\n                                            <option value=\\\"QA\\\">QA</option>\\n                                            <option value=\\\"Dev\\\">DEV</option>\\n                                            <option value=\\\"IT\\\">IT/INFRA</option>\\n                                            <option value=\\\"HRA/Admin\\\">HRA/Admin</option>\\n                                            <option value=\\\"Director\\\">Director</option>\\n                                         </select>\\n                                    <span *ngIf=\\\"!dept.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                     Please select department\\n                                   </span>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"showId\\\" class=col-sm-6>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !resManager.valid }\\\">\\n                                    <label>Resource Manager</label>\\n                                    <!-- <select name=\\\"resourceManager\\\" ngModel class=\\\"form-control\\\" required (change)=\\\"onChanged($event.target.value)\\\">\\n                                            <option *ngFor=\\\"let p of managerslist\\\" value={{p.empCode}}>{{p.firstName}}</option>\\n                                         </select>-->\\n                                    <select name=\\\"resourceManager\\\" ngModel class=\\\"form-control\\\" required #resManager=\\\"ngModel\\\">\\n                                           <option value=\\\"\\\" disabled>--select--</option>\\n                                           <option *ngFor=\\\"let p of managerslist\\\" value=\\\"{{p.empCode}}\\\">{{p.firstName}}</option>\\n                                         </select>\\n                                    <span *ngIf=\\\"!resManager.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                     Please select resource manager\\n                                   </span>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"showId\\\" class=col-sm-6>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userForm.submitted && !onsManager.valid }\\\">\\n                                    <label>Onsite Manager</label>\\n                                    <!--<select class=\\\"form-control\\\" name=\\\"onsiteManager\\\" required ngModel>\\n                                            <option *ngFor=\\\"let p of onsitemanagerslist\\\" value={{p.empCode}}>{{p.firstName}}</option>\\n                                    </select>-->\\n                                    <select class=\\\"form-control\\\" name=\\\"onsiteManager\\\" required ngModel #onsManager=\\\"ngModel\\\">\\n                                     <option value=\\\"\\\" disabled>--select--</option>\\n                                     <option *ngFor=\\\"let p of obj\\\" value=\\\"{{p}}\\\">{{p}}</option>\\n                                    </select>\\n                                    <span *ngIf=\\\"!onsManager.valid && userForm.submitted\\\" class=\\\"help-block\\\">\\n                                     Please select onsite manager\\n                                   </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Admin/app.signup.component.html\n// module id = 195\n// module chunks = 1","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n    <li *ngIf=\\\"isAdmin\\\"><a routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Dashboard</a></li>\\n    <li *ngIf=\\\"isAdmin && isManager\\\"><a routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\">Add User</a></li>\\n    <li class=\\\"active\\\"><a routerLink=\\\"/leave\\\" routerLinkActive=\\\"active\\\">Apply Leave</a></li>\\n    <li *ngIf=\\\"isAdmin && isManager\\\"><a routerLink=\\\"/edit\\\" routerLinkActive=\\\"active\\\">Edit User</a></li>\\n</ul>\\n<br>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"panel panel-primary\\\">\\n            <div class=\\\"panel-heading\\\">Welcome to Leave Tracking Application of Copart</div>\\n            <div class=\\\"panel-body table-responsive mytable\\\">\\n                <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Resource Manager</th>\\n                            <th>Onsite Manager</th>\\n                            <th>CL's</th>\\n                            <th>SL's</th>\\n                            <th>PL's</th>\\n                            <th>Director</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>{{employees.resourceManagerName}}</td>\\n                            <td>{{employees.onsiteManager}}</td>\\n                            <td>{{totleavesOfCL}}</td>\\n                            <td>{{totleavesOfSL}}</td>\\n                            <td>{{totleavesOfPL}}</td>\\n                            <td>{{employees.director}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"panel panel-primary\\\">\\n            <div class=\\\"panel-heading\\\">Leave history</div>\\n            <div class=\\\"panel-body table-responsive mytable\\\">\\n                <table class=\\\"table table-striped \\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Leave Type</th>\\n                            <th>Fromdate</th>\\n                            <th>Todate</th>\\n                            <th>No of days</th>\\n                            <th>Reason</th>\\n                            <th>Status</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let item of leaveHistory\\\">\\n                            <td>{{item.leaveType}}</td>\\n                            <td>{{item.fromDate}}</td>\\n                            <td>{{item.toDate}}</td>\\n                            <td>{{item.leavesApplied}}</td>\\n                            <td style=\\\"table-layout:fixed;width:25%;\\\">{{item.reason}}</td>\\n                            <td>{{item.status}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">Leave application form </div>\\n    <div class=\\\"panel-body\\\">\\n        <form #leaveform=\\\"ngForm\\\" (ngSubmit)=\\\"OnSubmit(leaveform.value, leaveform)\\\" novalidate>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div>\\n                                <label>From Date: </label>\\n                                <my-date-picker [options]=\\\"myDatePickerOptions\\\" ngModel name=\\\"fromDate\\\" required [(ngModel)]=\\\"leave.fromdate\\\" (dateChanged)=\\\"onChange($event, 'F')\\\"></my-date-picker>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div>\\n                                <label>To Date: </label> <span style=\\\"color:red; font-size:14px;\\\">{{todate_errorMsg}}</span>\\n                                <my-date-picker [options]=\\\"myDatePickerOptions\\\" ngModel name=\\\"toDate\\\" required [(ngModel)]=\\\"leave.todate\\\" (dateChanged)=\\\"onChange($event, 'T')\\\"></my-date-picker>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div>\\n                                <label>Leave type: </label>\\n                                <select ngModel name=\\\"leaveType\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"leave.leavetype\\\" (change)=\\\"onChange($event,'')\\\"> \\n                                    <option value=\\\"\\\" disabled >--select--</option>\\n                                    <option value=\\\"CL\\\">Casual leave</option>\\n                                    <option value=\\\"SL\\\">Sick Leave</option>\\n                                    <option value=\\\"PL\\\">Privilege Leave</option>\\n                                  </select>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div>\\n                                <label>No of days</label><span style=\\\"color:red; font-size:14px;\\\">{{leaves_errorMsg}}</span>\\n                                <input ngModel name=\\\"leavesApplied\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"leaves\\\" readonly>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <label>Reason for Leave</label>\\n                    <textarea class=\\\"form-control\\\" rows=\\\"4\\\" cols=\\\"10\\\" style=\\\"width:100%;\\\" ngModel name=\\\"reason\\\" required></textarea>\\n                </div>\\n            </div>\\n            <br>\\n            <button [disabled]=\\\"!leaveform.form.valid || valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\">Submit</button>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Home/app.leave.component.html\n// module id = 196\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"panel panel-primary\\\">\\r\\n                <div class=\\\"panel-heading\\\">Reset Password Here</div>\\r\\n                <div class=\\\"panel-body table-responsive \\\">\\r\\n                    <form name=\\\"set_password_form\\\" #set_password_form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(set_password_form.value,set_password_form)\\\"\\r\\n                        novalidate>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Enter Old Password</label>\\r\\n                            <password-input required name=\\\"oldpassword\\\" ngModel placeholder=\\\"Enter your old password here ...\\\" behaviour=\\\"click\\\" [(ngModel)]=\\\"oldpassword\\\"></password-input>\\r\\n                            <!--<input required name=\\\"oldpassword\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"oldpassword\\\">-->\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Enter New Password</label>\\r\\n                            <password-input required name=\\\"password\\\" ngModel placeholder=\\\"Enter your new password here ...\\\" behaviour=\\\"click\\\" [(ngModel)]=\\\"password\\\"></password-input>\\r\\n                            <!-- <input required name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\">-->\\r\\n                            <label>Confirm New Password</label>\\r\\n                            <password-input required name=\\\"repeatPassword\\\" ngModel placeholder=\\\"Confirm your new password here ...\\\" behaviour=\\\"click\\\"\\r\\n                                [(ngModel)]=\\\"repeatPassword\\\"></password-input>\\r\\n                            <!-- <input required name=\\\"repeatPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"repeatPassword\\\">-->\\r\\n                            <div style=\\\"color:red; font-size:14px;\\\" [hidden]=\\\"password == repeatPassword\\\"> New password does not match the confirm password</div>\\r\\n                        </div>\\r\\n                        <button [disabled]=\\\"!set_password_form.form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                        <button type=\\\"reset\\\" class=\\\"btn btn-primary\\\">Reset</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Home/app.setpassword.html\n// module id = 197\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 col-md-offset-2\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">Welcome To Login Portal of Copart</div>\\n                <div class=\\\" panel-body\\\">\\n                    <form #lgForm=\\\"ngForm\\\" (ngSubmit)=\\\"loginSubmit(lgForm.value)\\\">\\n                        <div class=\\\"input-group form-group\\\">\\n                            <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i></span>\\n                            <input type=\\\"text\\\" name=\\\"email\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Email\\\" required />\\n                        </div>\\n                        <div class=\\\"input-group form-group\\\">\\n                            <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-lock\\\"></i></span>\\n                           <input type=\\\"password\\\" name=\\\"password\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Password\\\" required  />\\n                        </div>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"action\\\">Login</button>\\n                        <span>{{errorMsg}}</span>\\n                     </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Login/app.login.component.html\n// module id = 198\n// module chunks = 1","module.exports = \"<div class=\\\"nav-bar text\\\">\\n    <nav class=\\\"navbar navbar-inverse\\\">\\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"navbar-header\\\">\\n                <img src=\\\"dist/assets/images/Copart.png\\\" style=\\\"width:150px;height:50px;\\\">\\n            </div>\\n            <div *ngIf=\\\"isLoggedIn\\\">\\n                <ul class=\\\"nav navbar-nav\\\">\\n                    <li><a (click)=\\\"Home()\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span> Home</a></li>\\n                </ul>\\n                <div class=\\\"dropdown nav navbar-nav navbar-right\\\">\\n                    <button class=\\\"dropbtn btnClass\\\">{{name}}\\n                <span class=\\\"glyphicon glyphicon-user\\\"></span></button>\\n                    <div class=\\\"dropdown-content\\\">\\n                        <a (click)=\\\"setpassword()\\\"><span class=\\\"glyphicon glyphicon-wrench\\\"></span> Change Password </a>\\n                        <a (click)=\\\"logout()\\\"><span class=\\\"glyphicon glyphicon-off\\\"></span> Logout</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </nav>\\n</div>\\n<div class=\\\"reload-bg\\\" [hidden]=\\\"!reload\\\"><img class=\\\"reload\\\" src=\\\"dist/assets/images/spinner.gif\\\" /></div>\\n<div class=\\\"my-container\\\">\\n    <toaster-container [toasterconfig]=\\\"config1\\\"></toaster-container>\\n    <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 199\n// module chunks = 1","import {Component,AfterViewInit,Input,ElementRef,ViewChild} from '@angular/core';\r\nimport {ControlValueAccessor,NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\n\r\nconst noop = () => {\r\n};\r\n\r\n@Component({\r\n    selector: `password-input`,\r\n    template: `\r\n    <div class=\"input-group mb-2 mr-sm-2 mb-sm-0\">\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"{{placeholder}}\" #input [(ngModel)]=\"value\">\r\n        <div class=\"input-group-addon\" #toggler><i class=\"fa fa-eye\"></i></div>\r\n    </div>`,\r\n    providers: [\r\n        { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: PasswordInputComponent }\r\n    ]\r\n})\r\nexport class PasswordInputComponent implements AfterViewInit, ControlValueAccessor {\r\n\r\n    private _value: string;\r\n    private _onChange: (_: any) => void = noop;\r\n\r\n    @ViewChild('input') el: ElementRef;\r\n    @ViewChild('toggler') toggler: ElementRef;\r\n    @Input() placeholder: string;\r\n    @Input() behaviour: string = 'press';\r\n\r\n\r\n    get value(): any {\r\n        return this._value;\r\n    };\r\n\r\n    set value(v: any) {\r\n        if (v !== this._value) {\r\n            this._value = v;\r\n            this._onChange(v);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        let __this = this;\r\n        let textbox = __this.el.nativeElement;\r\n        let toggler = __this.toggler.nativeElement;\r\n        let togglerIcon = toggler.childNodes[0];\r\n\r\n        // if (__this.behaviour === 'press') {\r\n        //     toggler.addEventListener('mousedown', (e) => {\r\n        //         textbox.type = 'text';\r\n        //         togglerIcon.classList.remove('fa-eye');\r\n        //         togglerIcon.classList.add('fa-eye-slash');\r\n        //     });\r\n        //     toggler.addEventListener('mouseup', (e) => {\r\n        //         textbox.type = 'password';\r\n        //         togglerIcon.classList.remove('fa-eye-slash');\r\n        //         togglerIcon.classList.add('fa-eye');\r\n        //     });\r\n        // }\r\n\r\n        if (__this.behaviour === 'click') {\r\n            toggler.addEventListener('click', (e) => {\r\n                textbox.type = textbox.type === 'password' ? 'text' : 'password';\r\n                 togglerIcon.classList.toggle('fa-eye');\r\n                 togglerIcon.classList.toggle('fa-eye-slash');\r\n            });\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        this._value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (value: any) => void) {\r\n        this._onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) { }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Home/app.password-input.ts","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\n\nexport class holidayService {\n    private _url: string ='/copartLTA/rest/api/v1/lta/holidays';\n    private editHolidayList_url:string='/copartLTA/rest/api/v1/lta/editHolidayList';\n\n\n    constructor(\n        private _router: Router, private _http: Http) { }\n\n\n    getHolidays() {\n       return this._http.get(this._url)\n            .map((response: Response) => response.json().body);\n\n    }\n    saveHolidayList(data:any){\n    console.log('Finished');\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let body = JSON.stringify(data);\n    return this._http.post(this.editHolidayList_url, data, headers)\n      .map((res: Response) => res.json()); \n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.holidayservice.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './Login/app.login.component';\nimport { LeaveComponent } from './Home/app.leave.component';\nimport { SignupComponent } from './Admin/app.signup.component';\nimport { EdituserComponent } from './Admin/app.edituser.component';\nimport { AdminComponent } from './Admin/app.admin.component';\nimport { SetPasswordComponent } from './Home/app.setpassword';\n\n\nconst routes: Routes = [\n    { path: '', component: LoginComponent },\n    { path: 'leave', component: LeaveComponent },\n    { path: 'admin', component: AdminComponent },\n    { path: 'signup', component: SignupComponent },\n    { path: 'edit', component: EdituserComponent },\n    { path:'setpassword',component:SetPasswordComponent},\n    \n\n];\n\n\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class RoutingComponent { }\nexport const routingModuleComponent = [LoginComponent, LeaveComponent,AdminComponent,EdituserComponent,SignupComponent,SetPasswordComponent]\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts"],"sourceRoot":""}